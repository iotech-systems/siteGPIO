#!/usr/bin/env python3

import os.path, redis
import time, setproctitle
import xml.etree.ElementTree as _et
import configparser as _cp
from applib.boardManager import boardManager
from applib.sunclock import sunClock
from applib.mainLoop import mainLoop


START_INI_PATH = "start_ini"
if not os.path.islink(START_INI_PATH):
   print(f"CWD: {os.getcwd()}")
   print(f"START_INI_SIMLINK_NOT_FOUND: {START_INI_PATH}")
   exit(1)
print(f"\n[ START_INI_SIMLINK_FOUND: {START_INI_PATH} ]\n")

INI: _cp.ConfigParser = _cp.ConfigParser()
INI.read(START_INI_PATH)

REDIS_SEC = "REDIS"
RED_HOST: str = INI.get(REDIS_SEC, "HOST")
RED_PORT: int = INI.getint(REDIS_SEC, "PORT")
RED_PWD: str = INI.get(REDIS_SEC, "PWD")
# ---  create & test  ---
RED: redis.Redis = redis.Redis(host=RED_HOST, port=RED_PORT
   , password=RED_PWD, decode_responses=True)
if not RED.ping():
   raise Exception("NoRedPong")
# -- -- -- -- -- -- -- --
print("GoodRedPong")


BOARDS_XML_FILE: str = INI.get("CORE", "BOARDS_XML_FILE")
if not os.path.exists(BOARDS_XML_FILE):
   raise FileNotFoundError(BOARDS_XML_FILE)
XML: _et.Element = _et.parse(BOARDS_XML_FILE).getroot()

HOSTNAME: str = os.uname()[1]
xpath = f"host[@name=\"{HOSTNAME}\"]"
HOST_XML: _et.Element = XML.find(xpath)

SUN: sunClock = sunClock(ini=INI)
print(SUN)
BOARD_MANAGER: boardManager = boardManager(ini=INI, sun=SUN, red=RED, xml=HOST_XML)
if not BOARD_MANAGER.init():
   raise Exception("BoardManagerInitError")

if not BOARD_MANAGER.start():
   raise Exception("BoardManagerStartError")

def main():
   _mainLoop: mainLoop = mainLoop()
   while True:
      try:
         rval: int = _mainLoop.loop_tick(board_man=BOARD_MANAGER, red=RED)
         if rval == 0:
            pass
         else:
            pass
         time.sleep(8.0)
      except Exception as e:
         print(e)


# -- -- entry point -- --
if __name__ == "__main__":
   setproctitle.setproctitle("siteGPIO")
   main()
